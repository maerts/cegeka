<?php

/**
 * @file
 * Installation profile installation hook implementations.
 */

/**
 * Implements hook_install().
 *
 * Perform actions to set up the site for this profile.
 */
function cegeka_install() {
  // Add text formats.
  $filtered_html_format = array(
    'format' => 'filtered_html',
    'name' => 'Filtered HTML',
    'weight' => 0,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // HTML filter.
      'filter_html' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 2,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $filtered_html_format = (object) $filtered_html_format;
  filter_format_save($filtered_html_format);

  $full_html_format = array(
    'format' => 'full_html',
    'name' => 'Full HTML',
    'weight' => 1,
    'filters' => array(
      // URL filter.
      'filter_url' => array(
        'weight' => 0,
        'status' => 1,
      ),
      // Line break filter.
      'filter_autop' => array(
        'weight' => 1,
        'status' => 1,
      ),
      // HTML corrector filter.
      'filter_htmlcorrector' => array(
        'weight' => 10,
        'status' => 1,
      ),
    ),
  );
  $full_html_format = (object) $full_html_format;
  filter_format_save($full_html_format);

  // Create a default role for site administrators, with all available
  // permissions assigned.
  $admin_role = new stdClass();
  $admin_role->name = 'administrator';
  $admin_role->weight = 2;
  user_role_save($admin_role);
  user_role_grant_permissions($admin_role->rid, array_keys(module_invoke_all('permission')));
  // Set this as the administrator role.
  variable_set('user_admin_role', $admin_role->rid);

  // Assign user 1 the "administrator" role.
  db_insert('users_roles')
    ->fields(array('uid' => 1, 'rid' => $admin_role->rid))
    ->execute();

  // Enable the admin theme.
  db_update('system')
    ->fields(array('status' => 1))
    ->condition('type', 'theme')
    ->condition('name', array('tao', 'rubik'), 'IN')
    ->execute();
  variable_set('admin_theme', 'rubik');
  variable_set('node_admin_theme', '1');

  // change the Views UI settings to more developer oriented values.
  variable_set('views_ui_show_listing_filters', TRUE);
  variable_set('views_ui_show_master_display', TRUE);
  variable_set('views_ui_show_advanced_column', TRUE);
  variable_set('views_ui_always_live_preview_button', TRUE);
  variable_set('views_ui_show_preview_information', TRUE);
  variable_set('views_ui_show_sql_query', TRUE);
  variable_set('views_ui_show_performance_statistics', TRUE);

  // better default i18n_node settings
  variable_set('i18n_hide_translation_links', 1);
  variable_set('i18n_node_translation_switch', 1);

  // higher update time limit, see http://drupal.org/node/952394
  variable_set('update_max_fetch_time', 60);

  // regional settings
  variable_set('date_first_day', 1);
  variable_set('date_api_use_iso8601', 1);
  variable_set('configurable_timezones', 0);

  // do not allow any registrations except by administrators
  variable_set('user_register', USER_REGISTER_ADMINISTRATORS_ONLY);

  // do not use the automated cron
  variable_set('cron_safe_threshold', 0);

  // set default path pattern of pathauto
  variable_set('pathauto_node_pattern', '[node:title]');

  // do not show rerouting messages in the mail body
  variable_set('reroute_email_enable_message', 0);
  variable_set('reroute_email_enable', 1);

  // check for module updates weekly
  variable_set('update_check_frequency', 7);

  // enable suggestion profiles
  variable_set('suggestions_profiles', array('general' => 'general', 'development' => 'development'));

  // workaround for issue in Less module (http://drupal.org/node/1506474)
  //module_enable(array('less'));
}
